/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode doubleIt(ListNode head) {
        ListNode dummy=new ListNode(-1);
        ListNode temp=dummy;
        ListNode rev=reverse(head);
        int carry=0;
        while(rev!=null || carry!=0){
            int val=rev==null?0:rev.val;
            int doub=2*val+carry;
            val=doub%10;
            ListNode newNode=new ListNode(val);
            carry=doub/10;
            temp.next=newNode;
            temp=temp.next;
            rev=rev==null?rev:rev.next;
        }
        ListNode ans=reverse(dummy.next);
        return ans;
    }
    public ListNode reverse(ListNode head){
        ListNode curr=head;
        ListNode next;
        ListNode prev=null;
        while(curr!=null){
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    } 
}
